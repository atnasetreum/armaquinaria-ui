---
interface Props {
  currentPage: number;
  totalPages: number;
}

const { currentPage, totalPages } = Astro.props;

const prevPage = currentPage > 1 ? currentPage - 1 : null;
const nextPage = currentPage < totalPages ? currentPage + 1 : null;
---

<nav class="flex justify-center mt-8">
  <ul class="inline-flex -space-x-px text-sm">
    <li>
      <a
        href={prevPage ? `?page=${prevPage}` : "#"}
        class={`flex items-center justify-center px-3 h-8 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 ${!prevPage ? "cursor-not-allowed opacity-50" : ""}`}
        >Previo</a
      >
    </li>
    {
      Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
        <li>
          <a
            href={`?page=${page}`}
            class={`flex items-center justify-center px-3 h-8 leading-tight ${currentPage === page ? "text-primary bg-primary-100 hover:bg-primary-200 hover:text-primary-700" : "text-gray-500 bg-white hover:bg-gray-100 hover:text-gray-700"} border border-gray-300`}
          >
            {page}
          </a>
        </li>
      ))
    }
    <li>
      <a
        href={nextPage ? `?page=${nextPage}` : "#"}
        class={`flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 ${!nextPage ? "cursor-not-allowed opacity-50" : ""}`}
        >Siguiente</a
      >
    </li>
  </ul>
</nav>
